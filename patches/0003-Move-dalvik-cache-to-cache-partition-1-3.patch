From f51753af002d5d6d002cdea32c9fcaf4534c423c Mon Sep 17 00:00:00 2001
From: lbdroid <definesinsanity@gmail.com>
Date: Tue, 2 Dec 2014 16:20:16 -0500
Subject: [PATCH] Move dalvik-cache to /cache partition 1/3

The /cache partition is largely unused. This will move a few hundred MB of dalvik cache over to /cache to save space on /data.
---
 runtime/utils.cc | 36 ++++++++++++++++++++++++++++++++----
 1 file changed, 32 insertions(+), 4 deletions(-)

diff --git a/runtime/utils.cc b/runtime/utils.cc
index 3765759..2c1f6b8 100644
--- a/runtime/utils.cc
+++ b/runtime/utils.cc
@@ -1201,11 +1201,39 @@ const char* GetAndroidDataSafe(std::string* error_msg) {
   return android_data;
 }
 
+const char* GetAndroidCache() {
+  std::string error_msg;
+  const char* dir = GetAndroidCacheSafe(&error_msg);
+  if (dir != nullptr) {
+    return dir;
+  } else {
+    LOG(FATAL) << error_msg;
+    return "";
+  }
+}
+
+const char* GetAndroidCacheSafe(std::string* error_msg) {
+  const char* android_cache = getenv("ANDROID_CACHE");
+  if (android_cache == NULL) {
+    if (OS::DirectoryExists("/cache")) {
+      android_cache = "/cache";
+    } else {
+      *error_msg = "ANDROID_CACHE not set and /cache does not exist";
+      return nullptr;
+    }
+  }
+  if (!OS::DirectoryExists(android_cache)) {
+    *error_msg = StringPrintf("Failed to find ANDROID_CACHE directory %s", android_cache);
+    return nullptr;
+  }
+  return android_cache;
+}
+
 void GetDalvikCache(const char* subdir, const bool create_if_absent, std::string* dalvik_cache,
                     bool* have_android_data, bool* dalvik_cache_exists, bool* is_global_cache) {
   CHECK(subdir != nullptr);
   std::string error_msg;
-  const char* android_data = GetAndroidDataSafe(&error_msg);
+  const char* android_data = GetAndroidCacheSafe(&error_msg);
   if (android_data == nullptr) {
     *have_android_data = false;
     *dalvik_cache_exists = false;
@@ -1217,7 +1245,7 @@ void GetDalvikCache(const char* subdir, const bool create_if_absent, std::string
   const std::string dalvik_cache_root(StringPrintf("%s/dalvik-cache/", android_data));
   *dalvik_cache = dalvik_cache_root + subdir;
   *dalvik_cache_exists = OS::DirectoryExists(dalvik_cache->c_str());
-  *is_global_cache = strcmp(android_data, "/data") == 0;
+  *is_global_cache = strcmp(android_data, "/cache") == 0;
   if (create_if_absent && !*dalvik_cache_exists && !*is_global_cache) {
     // Don't create the system's /data/dalvik-cache/... because it needs special permissions.
     *dalvik_cache_exists = ((mkdir(dalvik_cache_root.c_str(), 0700) == 0 || errno == EEXIST) &&
@@ -1227,12 +1255,12 @@ void GetDalvikCache(const char* subdir, const bool create_if_absent, std::string
 
 std::string GetDalvikCacheOrDie(const char* subdir, const bool create_if_absent) {
   CHECK(subdir != nullptr);
-  const char* android_data = GetAndroidData();
+  const char* android_data = GetAndroidCache();
   const std::string dalvik_cache_root(StringPrintf("%s/dalvik-cache/", android_data));
   const std::string dalvik_cache = dalvik_cache_root + subdir;
   if (create_if_absent && !OS::DirectoryExists(dalvik_cache.c_str())) {
     // Don't create the system's /data/dalvik-cache/... because it needs special permissions.
-    if (strcmp(android_data, "/data") != 0) {
+    if (strcmp(android_data, "/cache") != 0) {
       int result = mkdir(dalvik_cache_root.c_str(), 0700);
       if (result != 0 && errno != EEXIST) {
         PLOG(FATAL) << "Failed to create dalvik-cache directory " << dalvik_cache_root;
-- 
1.8.3.1

